var search_data = {"index":{"searchIndex":["clustererrorlogger","log_debug()","log_error()","log_exception()","log_info()"],"longSearchIndex":["clustererrorlogger","clustererrorlogger#log_debug()","clustererrorlogger#log_error()","clustererrorlogger#log_exception()","clustererrorlogger#log_info()"],"info":[["ClusterErrorLogger","","ClusterErrorLogger.html","","<p>Use these Methods to log your errors to a central File. Best practice would\nbe to include into application_controller …\n"],["log_debug","ClusterErrorLogger","ClusterErrorLogger.html#method-i-log_debug","(*debug_infos)","<p>Writes a multi line error message to cluster_log/info.log (default). Per\ndefault it only logs for dev/test …\n"],["log_error","ClusterErrorLogger","ClusterErrorLogger.html#method-i-log_error","(*error_messages)","<p>Writes a multi line error message to cluster_log/error.log (default). Takes\nan optional options hash …\n"],["log_exception","ClusterErrorLogger","ClusterErrorLogger.html#method-i-log_exception","(exception)","<p>Writes the exception with trace (current depth: 5) to cluster_log/error.log\n"],["log_info","ClusterErrorLogger","ClusterErrorLogger.html#method-i-log_info","(*custom_infos)","<p>Writes a multi line error message to cluster_log/error.log (default). Takes\nan optional options hash …\n"]]}}